// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package db

import (
	"database/sql"
	"database/sql/driver"
	"fmt"
	"time"

	"github.com/google/uuid"
	"github.com/lib/pq"
)

type AccountTypeEnum string

const (
	AccountTypeEnumDeliveryPartner AccountTypeEnum = "delivery_partner"
	AccountTypeEnumCustomer        AccountTypeEnum = "customer"
	AccountTypeEnumAdmin           AccountTypeEnum = "admin"
)

func (e *AccountTypeEnum) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = AccountTypeEnum(s)
	case string:
		*e = AccountTypeEnum(s)
	default:
		return fmt.Errorf("unsupported scan type for AccountTypeEnum: %T", src)
	}
	return nil
}

type NullAccountTypeEnum struct {
	AccountTypeEnum AccountTypeEnum `json:"account_type_enum"`
	Valid           bool            `json:"valid"` // Valid is true if AccountTypeEnum is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullAccountTypeEnum) Scan(value interface{}) error {
	if value == nil {
		ns.AccountTypeEnum, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.AccountTypeEnum.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullAccountTypeEnum) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.AccountTypeEnum), nil
}

type GenderEnum string

const (
	GenderEnumMale   GenderEnum = "male"
	GenderEnumFemale GenderEnum = "female"
	GenderEnumOther  GenderEnum = "other"
)

func (e *GenderEnum) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = GenderEnum(s)
	case string:
		*e = GenderEnum(s)
	default:
		return fmt.Errorf("unsupported scan type for GenderEnum: %T", src)
	}
	return nil
}

type NullGenderEnum struct {
	GenderEnum GenderEnum `json:"gender_enum"`
	Valid      bool       `json:"valid"` // Valid is true if GenderEnum is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullGenderEnum) Scan(value interface{}) error {
	if value == nil {
		ns.GenderEnum, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.GenderEnum.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullGenderEnum) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.GenderEnum), nil
}

type FlyerDistributionDetail struct {
	ID               uuid.UUID      `json:"id"`
	OrderID          uuid.NullUUID  `json:"order_id"`
	TargetArea       sql.NullString `json:"target_area"`
	DistributionDate time.Time      `json:"distribution_date"`
	PavementRequired sql.NullBool   `json:"pavement_required"`
	Status           sql.NullString `json:"status"`
	CreatedAt        sql.NullTime   `json:"created_at"`
}

type FlyerOrder struct {
	ID          uuid.UUID      `json:"id"`
	UserID      uuid.NullUUID  `json:"user_id"`
	ServiceType string         `json:"service_type"`
	OrderDate   sql.NullTime   `json:"order_date"`
	Status      sql.NullString `json:"status"`
	TotalCost   sql.NullString `json:"total_cost"`
	CreatedAt   sql.NullTime   `json:"created_at"`
	UpdatedAt   sql.NullTime   `json:"updated_at"`
}

type FlyerPrintDetail struct {
	ID            uuid.UUID      `json:"id"`
	OrderID       uuid.NullUUID  `json:"order_id"`
	UploadType    string         `json:"upload_type"`
	DesignFile    sql.NullString `json:"design_file"`
	FlyerSize     sql.NullString `json:"flyer_size"`
	PaperQuality  sql.NullString `json:"paper_quality"`
	FlyerQuantity int32          `json:"flyer_quantity"`
	CreatedAt     sql.NullTime   `json:"created_at"`
}

type OtpVerification struct {
	ID          uuid.UUID      `json:"id"`
	PhoneNumber string         `json:"phone_number"`
	Otp         pq.StringArray `json:"otp"`
	CreatedAt   sql.NullTime   `json:"created_at"`
	UpdatedAt   sql.NullTime   `json:"updated_at"`
}

type User struct {
	ID               uuid.UUID      `json:"id"`
	AccountType      string         `json:"account_type"`
	PhoneNumber      string         `json:"phone_number"`
	Email            sql.NullString `json:"email"`
	Name             string         `json:"name"`
	Photo            sql.NullString `json:"photo"`
	Gender           NullGenderEnum `json:"gender"`
	AadharNumber     sql.NullString `json:"aadhar_number"`
	AadharPhotoFront sql.NullString `json:"aadhar_photo_front"`
	AadharPhotoBack  sql.NullString `json:"aadhar_photo_back"`
	VehicleType      sql.NullString `json:"vehicle_type"`
	Age              sql.NullInt32  `json:"age"`
	GstNumber        sql.NullString `json:"gst_number"`
	AdminRole        sql.NullString `json:"admin_role"`
	CreatedAt        sql.NullTime   `json:"created_at"`
	UpdatedAt        sql.NullTime   `json:"updated_at"`
}
